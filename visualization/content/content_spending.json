{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "autosize": {"type": "pad", "contains": "padding"},
  "background": "rgba(0, 0, 0, 0)",
  "padding": 5,
  "width": 600,
  "title": {
    "anchor": "start",
    "text": "Netflix Cash Spent on Content Over Time",
    "subtitle": [
      "Quarterly Data From Netflix Financial Statement Q1/2018 - Q3/2023",
      "\n"
    ],
    "subtitleColor": "white"
  },
  "data": [
    {"name": "param_2_store"},
    {
      "name": "data-a5f248fb57fedbb2d3ed66231df0a422",
      "values": [
        {"Period": "2018-Q1", "Cash Spend on content": 2986747},
        {"Period": "2018-Q2", "Cash Spend on content": 3033721},
        {"Period": "2018-Q3", "Cash Spend on content": 3238717},
        {"Period": "2018-Q4", "Cash Spend on content": 3784252},
        {"Period": "2019-Q1", "Cash Spend on content": 2997746},
        {"Period": "2019-Q2", "Cash Spend on content": 3325103},
        {"Period": "2019-Q3", "Cash Spend on content": 3648292},
        {"Period": "2019-Q4", "Cash Spend on content": 3945542},
        {"Period": "2020-Q1", "Cash Spend on content": 3294275},
        {"Period": "2020-Q2", "Cash Spend on content": 2510782},
        {"Period": "2020-Q3", "Cash Spend on content": 2653886},
        {"Period": "2020-Q4", "Cash Spend on content": 3320341},
        {"Period": "2021-Q1", "Cash Spend on content": 3284576},
        {"Period": "2021-Q2", "Cash Spend on content": 4096750},
        {"Period": "2021-Q3", "Cash Spend on content": 4666237},
        {"Period": "2021-Q4", "Cash Spend on content": 5654639},
        {"Period": "2022-Q1", "Cash Spend on content": 3584164},
        {"Period": "2022-Q2", "Cash Spend on content": 4687011},
        {"Period": "2022-Q3", "Cash Spend on content": 4582671},
        {"Period": "2022-Q4", "Cash Spend on content": 3985192},
        {"Period": "2023-Q1", "Cash Spend on content": 2458666},
        {"Period": "2023-Q2", "Cash Spend on content": 3683007},
        {"Period": "2023-Q3", "Cash Spend on content": 2883839}
      ]
    },
    {
      "name": "data_1",
      "source": "data-a5f248fb57fedbb2d3ed66231df0a422",
      "transform": [
        {
          "type": "filter",
          "expr": "!length(data(\"param_2_store\")) || vlSelectionTest(\"param_2_store\", datum)"
        }
      ]
    },
    {
      "name": "data_2",
      "source": "data_1",
      "transform": [
        {
          "type": "impute",
          "field": "Cash Spend on content",
          "groupby": [],
          "key": "Period",
          "method": "value",
          "value": 0
        },
        {
          "type": "stack",
          "groupby": ["Period"],
          "field": "Cash Spend on content",
          "sort": {"field": [], "order": []},
          "as": ["Cash Spend on content_start", "Cash Spend on content_end"],
          "offset": "zero"
        }
      ]
    },
    {
      "name": "data_3",
      "source": "data_1",
      "transform": [
        {
          "type": "stack",
          "groupby": ["Period"],
          "field": "Cash Spend on content",
          "sort": {"field": [], "order": []},
          "as": ["Cash Spend on content_start", "Cash Spend on content_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"Cash Spend on content\"]) && isFinite(+datum[\"Cash Spend on content\"])"
        }
      ]
    },
    {
      "name": "data_4",
      "source": "data-a5f248fb57fedbb2d3ed66231df0a422",
      "transform": [
        {
          "type": "stack",
          "groupby": ["Period"],
          "field": "Cash Spend on content",
          "sort": {"field": [], "order": []},
          "as": ["Cash Spend on content_start", "Cash Spend on content_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"Cash Spend on content\"]) && isFinite(+datum[\"Cash Spend on content\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "concat_0_height", "value": 200},
    {"name": "view_2_height", "value": 100},
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "param_2",
      "update": "vlSelectionResolve(\"param_2_store\", \"union\")"
    }
  ],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "concat_0_height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_layer_0_marks",
          "type": "area",
          "style": ["area"],
          "sort": {"field": "datum[\"Period\"]"},
          "interactive": true,
          "from": {"data": "data_2"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "orient": {"value": "vertical"},
              "fill": {"value": "#ff7272"},
              "tooltip": {
                "signal": "{\"Period\": isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"], \"Cash Spend on content\": format(datum[\"Cash Spend on content\"], \"\")}"
              },
              "description": {
                "signal": "\"Period: \" + (isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"]) + \"; Cash Spend on content: \" + (format(datum[\"Cash Spend on content\"], \"\"))"
              },
              "x": {"scale": "concat_0_x", "field": "Period"},
              "y": {
                "scale": "concat_0_y",
                "field": "Cash Spend on content_end"
              },
              "y2": {
                "scale": "concat_0_y",
                "field": "Cash Spend on content_start"
              },
              "defined": {
                "signal": "isValid(datum[\"Cash Spend on content\"]) && isFinite(+datum[\"Cash Spend on content\"])"
              }
            }
          }
        },
        {
          "name": "concat_0_layer_1_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_3"},
          "encode": {
            "update": {
              "opacity": {"value": 1},
              "size": {"value": 100},
              "fill": {"value": "#ff7272"},
              "tooltip": {
                "signal": "{\"Period\": isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"], \"Cash Spend on content\": format(datum[\"Cash Spend on content\"], \"\")}"
              },
              "ariaRoleDescription": {"value": "point"},
              "description": {
                "signal": "\"Period: \" + (isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"]) + \"; Cash Spend on content: \" + (format(datum[\"Cash Spend on content\"], \"\"))"
              },
              "x": {"scale": "concat_0_x", "field": "Period"},
              "y": {"scale": "concat_0_y", "field": "Cash Spend on content_end"}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_0_y",
          "orient": "left",
          "offset": 10,
          "gridScale": "concat_0_x",
          "grid": true,
          "tickCount": {"signal": "ceil(concat_0_height/40)"},
          "domain": false,
          "labels": false,
          "aria": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "labelAngle": 315,
          "labelAlign": "right",
          "labelBaseline": "top",
          "zindex": 0
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "grid": false,
          "labelAngle": 0,
          "offset": 10,
          "labelAlign": "right",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_0_height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "view_2_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "view_2_height"}
        }
      },
      "signals": [
        {
          "name": "param_2_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"param_2_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"param_2_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[param_2_x[0], clamp(x(unit), 0, width)]"
            },
            {"events": {"signal": "param_2_scale_trigger"}, "update": "[0, 0]"},
            {
              "events": [{"source": "view", "type": "dblclick"}],
              "update": "[0, 0]"
            },
            {
              "events": {"signal": "param_2_translate_delta"},
              "update": "clampRange(panLinear(param_2_translate_anchor.extent_x, param_2_translate_delta.x / span(param_2_translate_anchor.extent_x)), 0, width)"
            },
            {
              "events": {"signal": "param_2_zoom_delta"},
              "update": "clampRange(zoomLinear(param_2_x, param_2_zoom_anchor.x, param_2_zoom_delta), 0, width)"
            }
          ]
        },
        {
          "name": "param_2_Period",
          "on": [
            {
              "events": {"signal": "param_2_x"},
              "update": "param_2_x[0] === param_2_x[1] ? null : invert(\"view_2_x\", param_2_x)"
            }
          ]
        },
        {
          "name": "param_2_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [{"scale": "view_2_x"}],
              "update": "(!isArray(param_2_Period) || (invert(\"view_2_x\", param_2_x)[0] === param_2_Period[0] && invert(\"view_2_x\", param_2_x)[1] === param_2_Period[1])) ? param_2_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "param_2_tuple",
          "on": [
            {
              "events": [{"signal": "param_2_Period"}],
              "update": "param_2_Period ? {unit: \"view_2\", fields: param_2_tuple_fields, values: [param_2_Period]} : null"
            }
          ]
        },
        {
          "name": "param_2_tuple_fields",
          "value": [{"field": "Period", "channel": "x", "type": "E"}]
        },
        {
          "name": "param_2_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "param_2_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(param_2_x)}"
            }
          ]
        },
        {
          "name": "param_2_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "param_2_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: param_2_translate_anchor.x - x(unit), y: param_2_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "param_2_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "param_2_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "param_2_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "param_2_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "param_2_modify",
          "on": [
            {
              "events": {"signal": "param_2_tuple"},
              "update": "modify(\"param_2_store\", param_2_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "param_2_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "signal": "param_2_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "signal": "param_2_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "view_2_marks",
          "type": "rect",
          "style": ["bar"],
          "interactive": true,
          "from": {"data": "data_4"},
          "encode": {
            "update": {
              "fill": [
                {
                  "test": "!length(data(\"param_2_store\")) || vlSelectionTest(\"param_2_store\", datum)",
                  "value": "#e50914"
                },
                {"value": "#f0dddd"}
              ],
              "tooltip": {
                "signal": "{\"Period\": isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"], \"Cash Spend on content\": format(datum[\"Cash Spend on content\"], \"\")}"
              },
              "ariaRoleDescription": {"value": "bar"},
              "description": {
                "signal": "\"Period: \" + (isValid(datum[\"Period\"]) ? datum[\"Period\"] : \"\"+datum[\"Period\"]) + \"; Cash Spend on content: \" + (format(datum[\"Cash Spend on content\"], \"\"))"
              },
              "xc": {"scale": "view_2_x", "field": "Period", "band": 0.5},
              "width": {"value": 15},
              "y": {"scale": "view_2_y", "field": "Cash Spend on content_end"},
              "y2": {
                "scale": "view_2_y",
                "field": "Cash Spend on content_start"
              }
            }
          }
        },
        {
          "name": "param_2_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "signal": "param_2_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "signal": "param_2_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"param_2_store\").length && data(\"param_2_store\")[0].unit === \"view_2\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {"test": "param_2_x[0] !== param_2_x[1]", "value": "white"},
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "view_2_x",
          "orient": "bottom",
          "grid": false,
          "labelAngle": 315,
          "labelAlign": "right",
          "labelBaseline": "top",
          "zindex": 0
        },
        {
          "scale": "view_2_y",
          "orient": "left",
          "grid": false,
          "labelAngle": 0,
          "labelAlign": "right",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(view_2_height/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "concat_0_x",
      "type": "point",
      "domain": {
        "fields": [
          {"data": "data_2", "field": "Period"},
          {"data": "data_3", "field": "Period"}
        ],
        "sort": true
      },
      "range": [0, {"signal": "width"}],
      "padding": 0.5
    },
    {
      "name": "concat_0_y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_2", "field": "Cash Spend on content_start"},
          {"data": "data_2", "field": "Cash Spend on content_end"},
          {"data": "data_3", "field": "Cash Spend on content_start"},
          {"data": "data_3", "field": "Cash Spend on content_end"}
        ]
      },
      "range": [{"signal": "concat_0_height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "view_2_x",
      "type": "band",
      "domain": {"data": "data_4", "field": "Period", "sort": true},
      "range": [0, {"signal": "width"}],
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    },
    {
      "name": "view_2_y",
      "type": "linear",
      "domain": {
        "data": "data_4",
        "fields": ["Cash Spend on content_start", "Cash Spend on content_end"]
      },
      "range": [{"signal": "view_2_height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "config": {
    "range": {
      "category": [
        "#f0e442",
        "#cc79a7",
        "#79c9cd",
        "#D55e00",
        "#780909",
        "#0b0000",
        "#dedede",
        "#43465e"
      ],
      "diverging": [
        "#ff7272",
        "#e80000",
        "#c10000",
        "#973333",
        "#640000",
        "#000000"
      ]
    },
    "axisX": {
      "labelColor": "#F5F5F1",
      "titleColor": "#ededed",
      "domain": true,
      "domainColor": "#43465e",
      "domainWidth": 0.5,
      "grid": false,
      "labelFont": "Lato",
      "labelFontSize": 12,
      "labelAngle": 0,
      "tickColor": "#43465e",
      "tickSize": 5,
      "titleFont": "Lato",
      "titleFontSize": 12,
      "titlePadding": 10,
      "title": "X Axis Title (units)"
    },
    "axisY": {
      "domain": false,
      "domainColor": "#e4e4e4",
      "grid": true,
      "gridColor": "#43465e",
      "gridWidth": 1,
      "labelFont": "Lato",
      "labelFontSize": 12,
      "labelColor": "#F5F5F1",
      "labelAngle": 0,
      "ticks": false,
      "titleFont": "Lato",
      "titleFontSize": 12,
      "titlePadding": 10,
      "title": "Y Axis Title (units)",
      "titleAngle": 0,
      "titleY": -10,
      "titleX": 18
    },
    "legend": {
      "labelColor": "#dadada",
      "labelFont": "Lato",
      "labelFontSize": 12,
      "titleColor": "#dadada",
      "titleFont": "Lato",
      "titleFontSize": 12
    },
    "style": {
      "guide-label": {"fill": "#fff"},
      "guide-title": {"fill": "#fff"},
      "cell": {"fill": "rgba(0, 0, 0, 0)", "stroke": "transparent"},
      "group-title": {
        "fontSize": 18,
        "font": "Lato",
        "subtitlefont": "Lato",
        "fill": "#ffffff"
      }
    }
  }
}
